#include "pch.h"
#include "CTimeMgr.h"

#include "CCore.h"


CTimeMgr::CTimeMgr()
	: m_LICurCount{}
	, m_LIPrevCount{}
	, m_LIFrequency{}
	, m_dDT(0.)
	, m_dAcc(0.)
	, m_iCallCount(0)
{

}

CTimeMgr::~CTimeMgr()
{

}

void CTimeMgr::init()
{
	// 이전 카운트 횟수
	QueryPerformanceCounter(&m_LIPrevCount);

	// 초당 카운트 횟수
	QueryPerformanceFrequency(&m_LIFrequency);
}

void CTimeMgr::update()
{
	// 현재 카운트 횟수
	QueryPerformanceCounter(&m_LICurCount);

	// 이전 프레임의 카운팅과, 현재 프레임 카운팅 값의 차이를 구한다 => DeltaTime
	m_dDT = (double)(m_LICurCount.QuadPart - m_LIPrevCount.QuadPart) / (double)m_LIFrequency.QuadPart;

	// 이전 카운트 값을 현재 카운트 값으로 갱신한다. (다음번 계산을 위해서)
	m_LIPrevCount = m_LICurCount;


#ifdef _DEBUG
	if (m_dDT > (1. / 60.))
	{
		m_dDT = (1. / 60.);
	}

#endif
}

void CTimeMgr::render()
{
	++m_iCallCount;
	m_dAcc += m_dDT; // DT 누적

	if (m_dAcc >= 1.)
	{
		m_iFPS = m_iCallCount;
		m_dAcc = 0.;
		m_iCallCount = 0;

		wchar_t szBuffer[255] = {};
		swprintf_s(szBuffer, L"FPS : %d, DT : %f", m_iFPS, m_dDT);
		SetWindowText(CCore::GetInst()->GetMainHwnd(), szBuffer);
	}
}
